{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "ts react component": {
    "prefix": "tscomponent",
    "body": [
      "import { FC } from \"react\";",
      "",
      "export interface ${2:$TM_FILENAME_BASE}Props {};",
      "",
      "const ${2:$TM_FILENAME_BASE}: FC<${2:$TM_FILENAME_BASE}Props> = ({}: ${2:$TM_FILENAME_BASE}Props) => {",
      "  return ${0:<></>};",
      "};",
      "",
      "export default ${2:$TM_FILENAME_BASE};",
      ""
    ],
    "description": "Typescript React Component"
  },
  "useState()": {
    "prefix": "us",
    "body": [
      "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<$2>($3);",
      "$0"
    ],
    "description": "useState()"
  },
  "useState(true)": {
    "prefix": "ust",
    "body": [
      "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<boolean>(true);",
      "$0"
    ],
    "description": "useState(true)"
  },
  "useState(false)": {
    "prefix": "usf",
    "body": [
      "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<boolean>(false);",
      "$0"
    ],
    "description": "useState(false)"
  },
  "useState(null)": {
    "prefix": "usn",
    "body": [
      "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState<$2 | null>(null);",
      "$0"
    ],
    "description": "useState(null)"
  }
}
